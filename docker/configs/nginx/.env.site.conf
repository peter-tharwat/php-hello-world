log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
              'Headers: $http_user_agent, $http_cookie, $http_referer, $http_x_forwarded_for, $http_host';

gzip on;
gzip_disable "msie6";
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_buffers 32 8k;
gzip_http_version 1.1;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript font/woff font/woff2 image/svg+xml;

client_body_buffer_size 10K;
client_max_body_size 20000M;
client_header_buffer_size 1k;
large_client_header_buffers 4 4k;

# Redirect any www.* host to bare domain
server {
    listen 80;
    listen 443;
    server_name ~^www\.(?<base>.+)$;
    return 301 $scheme://$base$request_uri;
}

server {
    listen 80;
    listen 443;
    client_max_body_size 20000M;
    server_name _;
    root /var/www/html/site/public;
    index index.php index.html index.htm index.nginx-debian.html;
    proxy_cache_valid 200 365d;
    charset utf-8;

    set_real_ip_from 0.0.0.0/0;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    error_log /var/log/nginx/error.log error;
    sendfile off;

    error_page 404 403 500 502 503 504 /maintenance.html;
    location = /maintenance.html {
        root /usr/share/nginx/html;
        index index.html;
    }

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    location /health-check-nginx {
        return 200 'Healthy';
        add_header Content-Type text/plain;
    }

    # Block sensitive files
    location ~ /\.(?:env|log|htaccess)$ {
        deny all;
    }

    # Strip .../index.php -> ... (permanent)
    rewrite ^(?<p>/.*/)index\.php/?(?<rest>.*)$ $p$rest permanent;

    # Static assets
    location ~*\.(?:js|css|jpg|jpeg|png|gif|tgz|gz|rar|bz2|doc|pdf|ppt|tar|wav|bmp|rtf|swf|ico|flv|txt|woff|woff2|svg|mp3|eot|ttf)$ {
        access_log off;
        expires 360d;
        add_header Access-Control-Allow-Origin *;
        add_header Pragma public;
        add_header Cache-Control "public";
        add_header Vary Accept-Encoding;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # App
    location / {
        add_header Access-Control-Allow-Origin *;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP-FPM
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_pass ${PHP_UPSTREAM};
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;
        fastcgi_read_timeout 8600;
        fastcgi_intercept_errors off;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
    }

    # Extra safety
    location ~ /\.ht {
        deny all;
    }
}